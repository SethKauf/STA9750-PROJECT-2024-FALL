---
title: "Ridership Analysis"
author: "Seth Kaufman"
format: html
css: styles.css
---


# Introduction

For Metro Mindset's group project[^1], I analyzed ridership in NYC, specifically looking at the decline in MTA Ridership and potentially the increase in other forms of transportation as a reason for the Subway's struggle in returning to pre-pandemic ridership numbers.

# Data

Below are various code snippets that can be *unfolded* to follow along in an `R` terminal, however the data is not staged in `R`.

Quickly about the DMV and U.S. Census Data:

The data comes from two sources:

* `vehicle_regs.csv` comes directly from the New York DMV through [Data.NY.GOV](data.ny.gov)
  * The specific place is the [Vehicle, Snowbile, and Boat Registrations](https://data.ny.gov/Transportation/Vehicle-Snowmobile-and-Boat-Registrations/w4pv-hbkt/about_data) Dataset
  * This dataset is continuously updated, meaning the data you pull today will be different than what I initially pulled back in October.
  * This dataset contains as of writing 12.6M records.

* `Vehicle_Registrations_By_Boro.xlsx` was created by combining U.S. Census Data for Vehicle Ownership in NYC for each year into a single Excel file.

# R code setup

If you want to code along with the analysis, I've provided the relevant code below, just click the `Code` dropdown button.

The datafiles are stored off GitHub.

```{r install-packages_[1], echo=TRUE, message=FALSE, warning=FALSE}
#| code-fold: TRUE
if (!require("dplyr")) install.packages("dplyr")
if (!require("DT")) install.packages("DT")
if (!require("ggplot2")) install.packages("ggplot2")
if (!require("ggrepel")) install.packages("ggrepel")
if (!require("glue")) install.packages("glue")
if (!require("lubridate")) install.packages("lubridate")
if (!require("plotly")) install.packages("plotly")
if (!require("psych")) install.packages("psych")
if (!require("readr")) install.packages("readr")
if (!require("scales")) install.packages("scales")
if (!require("tidyverse")) install.packages("tidyverse")

library(dplyr)
library(DT)
library(ggplot2)
library(ggrepel)
library(glue)
library(lubridate)
library(plotly)
library(psych)
library(readr)
library(scales)
library(tidyverse)
```

# Ridership Trends

First a look at the problem: let's see how ridership and the MTA's revenue from the Subway have fared over the past several years.

```{r ridership-and-revenue_[2], echo=TRUE, message=FALSE, warning=FALSE}
#| code-fold: TRUE
df <- readxl::read_xlsx("data/ridership/ridership_costs_summary_stats.xlsx")

ggplot(df, aes(x = Year)) +
  # plotting the different lines of ridership and $ in a way that pops out
  geom_line(aes(y = Yearly_Subway_Ridership / 1e9, color = "Subway Ridership"), size = 1.5) +
  geom_point(aes(y = Yearly_Subway_Ridership / 1e9, color = "Subway Ridership"), size = 2) +
  
  geom_line(aes(y = MTA_Subway_Total_Revenue / 1e9, color = "Revenue"), size = 1) +
  geom_point(aes(y = MTA_Subway_Total_Revenue / 1e9, color = "Revenue"), size = 2) +
  
  geom_line(aes(y = (MTA_Subway_Total_Expenses * -1) / 1e9, color = "Expenses"), size = 1) +
  geom_point(aes(y = (MTA_Subway_Total_Expenses * -1) / 1e9, color = "Expenses"), size = 2) +
  
  geom_line(aes(y = Revenue_Less_Expenses / 1e9, color = "Revenue Less Expenses"), size = 1) +
  geom_point(aes(y = Revenue_Less_Expenses / 1e9, color = "Revenue Less Expenses"), size = 2) +
  
  geom_vline(xintercept = c(2017, 2020, 2023), linetype = "dashed", color = "grey") +
  
  # Centered bar at y = 0
  geom_hline(yintercept = 0, linetype = "solid", color = "black", size = 1.2) +
  
  geom_text(data = df[df$Year %in% c(2017, 2020, 2023), ],
            aes(y = Yearly_Subway_Ridership / 1e9, label = paste0(round(Yearly_Subway_Ridership / 1e9, 1), "B")),
            color = "darkblue", hjust = -0.2, vjust = 1.5, size = 3.5) +
  
  geom_text(data = df[df$Year %in% c(2017, 2020, 2023), ],
            aes(y = MTA_Subway_Total_Revenue / 1e9, label = scales::dollar(MTA_Subway_Total_Revenue, scale = 1e-9, suffix = "B")),
            color = "darkgreen", hjust = -0.2, vjust = -0.5, size = 3.5) +
  
  geom_text(data = df[df$Year %in% c(2017, 2020, 2023), ],
            aes(y = (MTA_Subway_Total_Expenses * -1) / 1e9, label = scales::dollar((MTA_Subway_Total_Expenses * -1), scale = 1e-9, suffix = "B")),
            color = "darkred", hjust = -0.2, vjust = -0.5, size = 3.5) +
  
  geom_text(data = df[df$Year %in% c(2017, 2020, 2023), ],
            aes(y = Revenue_Less_Expenses / 1e9, label = scales::dollar(Revenue_Less_Expenses, scale = 1e-9, suffix = "B")),
            color = "darkorange", hjust = -0.2, vjust = -0.5, size = 3.5) +
  
  # Axis settings
  scale_x_continuous(
    breaks = seq(2017, 2023, 1),
    limits = c(2016.5, 2023.5)
  ) +
  scale_y_continuous(
    labels = label_number(suffix = "B", accuracy = 0.1),
    sec.axis = sec_axis(~ . * 1, labels = label_number(suffix = "B", accuracy = 0.1))
  ) +
  
  scale_color_manual(
    name = "Legend",
    values = c(
      "Subway Ridership" = "#8be8eb",
      "Revenue" = "darkgreen",
      "Expenses" = "darkred",
      "Revenue Less Expenses" = "#f5ab20"
    ),
    breaks = c("Subway Ridership", "Revenue", "Expenses", "Revenue Less Expenses")
  ) +

  labs(
    x = NULL,  
    y = NULL,
    title = "MTA Subway Ridership and Revenue\n2017-2023"
  ) +
  
  theme_minimal() +
  theme(
    plot.background = element_rect(fill = "gray95"),  
    panel.background = element_rect(fill = "gray95", color = NA),  
    plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),  
    axis.text.y.left = element_text(angle = 45, hjust = 1),
    axis.text.y.right = element_text(angle = 45),
    legend.position = "right",
    panel.grid.major = element_line(color = "gray30", size = 0.25),
    panel.grid.minor = element_line(color = "gray30", size = 0.1)
  )
```

That 2020 dip has hurt a lot. Ridership is still quite low compared to pre-pandemic. The *Office of the NY State Comptroller* estimates that it will eventually return to pre-pandemic levels[^2], but that won't happen for quite sometime.

<div class="center-image">
  ![OSC NY predicts a steady increase in ridership over the coming years](images/OSC_Graph.png)
</div>



With this in mind, let's look at how other forms of transit that could have overtaken the Subways are going.

# Other Transportation

Because of this decline in ridership combined with an uptick in living here, a good next step was to see how other forms of transit have done in NYC since COVID, specifically vehicle ownership and bike ridership.

The working theory going into this was "are people just driving or biking more?"

## Vehicles

During COVID, one of the many items to find their demand skyrocket were used cars[^3].

So, did the number of cars in NYC increase that much?

### NYS DMV Analysis

Originally I figured to review DMV registration data.

```{r read-cars-data_[3], echo=TRUE, message=FALSE, warning=FALSE}
#| code-fold: TRUE
# read in data from cars csv
cars <- read_csv("data/ridership/vehicle_regs.csv")

# filter cars on Vehicles, check only for counties in NYC
# select only cols we want and rename them to something more useful for our purposes
cars <- cars |>
  filter(
    `Record Type` == "VEH",
    `County` %in% c("KINGS", "QUEENS", "BRONX", "NEW YORK")
  ) |>
  select(
    class = `Registration Class`,
    city = `City`,
    state = `State`,
    zip = `Zip`,
    county = `County`,
    mdlYear = `Model Year`,
    make = `Make`,
    bodyType = `Body Type`,
    fuelType = `Fuel Type`,
    unlWeight = `Unladen Weight`,
    maxGrossWeight = `Maximum Gross Weight`,
    passengers = `Passengers`,
    regDate = `Reg Valid Date`,
    regExpDate = `Reg Expiration Date`,
    color = `Color`,
    scfwInd = `Scofflaw Indicator`,
    spsInd = `Suspension Indicator`,
    revInd = `Revocation Indicator`
  ) |>
  filter(!is.na(regDate)) |>
  mutate(
    Reg_Date = as.Date(regDate, format = "%m/%d/%Y"),
    year = year(Reg_Date)
  ) |>
  filter(class %in% c("PAS", "OMT", "MOT")) # Passenger, Omnibus Taxi, Motorcycle

# creating a dt just to view the 100 random records
cars |>
  mutate(
    city = str_to_title(city),
    county = str_to_title(county)
  ) |>
  select(
    `Class` = class,
    `City` = city,
    `County` = county,
    `Model Year` = mdlYear,
    `Make` = make,
    `Registration Date` = regDate,
    `Registration Expiration Date` = regExpDate
  ) |>
  slice_sample(
    n=100
    ) |>
  DT::datatable()
```

This is a quick look at the cars table, though with only 100 of the ~1.7M records.

```{r group-cars-and-plot-cars-data_[4], echo=TRUE, message=FALSE, warning=FALSE}
#| code-fold: TRUE
# registration per county per year
summary_table <- cars |>
  group_by(county, year) |>
  summarise(
    Reg_Count = n(), # Count of records for each county-year group
    Avg_Mdl_Year = mean(mdlYear, na.rm = TRUE), # Average mdlYear, excluding NULLs
    Ct_Pas = sum(class == "PAS", na.rm = TRUE), # Count where class is "PAS"
    Ct_Omt = sum(class == "OMT", na.rm = TRUE), # Count where class is "OMT"
    Ct_Mot = sum(class == "MOT", na.rm = TRUE) # Count where class is "MOT"
  ) |>
  ungroup()

# creating as its own var
car_registration_plot_data <- cars |>
  filter(
    year >= 2014
  ) |>
  group_by(county, year) |>
  summarize(registration_count = n(), .groups = "drop") # Count registrations by county and year

# Create the line plot for Vehicle Registration by County
ggplot(car_registration_plot_data, aes(x = year, y = registration_count, color = county, group = county)) +
  geom_line(linewidth = 2) +
  scale_y_continuous(labels = comma) + # Remove scientific notation
  labs(
    title = "Vehicle Registrations by County per Year (2014-2024)",
    x = "Year",
    y = "Count of Vehicle Registrations"
  ) +
  theme_minimal() +
  theme(legend.title = element_blank(),
        plot.background = element_rect(fill = "gray95"),
        panel.background = element_rect(fill = "gray95", color = NA))
```

It turned out, a major problem with this data was that it updates and removes old registrations.

This means most registrations from before mid-2021 have expired and therefore been removed from the table.

The historical datasets hosted on NYS' site only went back a few years, unfortunately. So I found different data.

### U.S. Census Data Analysis

I used US Census data to look at vehicle registrations, which had a more complete 10-year lookback, giving yearly totals for each borough in NYC.

```{r home-occ-by-county_[5], echo=TRUE, message=FALSE, warning=FALSE}
#| code-fold: TRUE
#### Car Regs -- US Census
# Using Census Data
regs <- readxl::read_xlsx("data/ridership/Vehicle_Registrations_By_Boro.xlsx", sheet = "Data")

# Only want in 4 boros (sorry SI)
filtered_regs <- regs |>
  filter(Label %in% c("BRONX", "KINGS", "NEW YORK", "QUEENS"))


# Occupied Homes by County
ggplot(filtered_regs, aes(x = Year, y = OCC_T, fill = Label)) +
  geom_bar(stat = "identity") +
  labs(x = "Year", y = "Occupied Count", title = "Number of Occupied Homes per Year by County") +
  theme_minimal() +
  theme(
    plot.background = element_rect(fill = "gray95"),
    panel.background = element_rect(fill = "gray95", color = NA),
    plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
    scale_fill_brewer(palette = "Set2")
  ) +
  scale_y_continuous(labels = scales::comma) +
  scale_x_continuous(breaks = seq(min(regs$Year), max(regs$Year), by = 1))
```

While gathering the registration data, I also took advantage of the U.S. Census having home-occupancy data in the same table.

A popular "doomerism" about NYC is that people are fleeing it, something which would certainly contribute to why ridership on the Subway might be down, but according to the Census data, we can see how home occupancies have actually grown in NYC over the past few years.

```{r pivoting-and-filtering_[6], echo=TRUE, message=FALSE, warning=FALSE}
#| code-fold: TRUE
# pivot registration table
# make the year the columns and county the Label/Index
regs_pivot <- regs |>
  select(
    Label,
    Year,
    V_H
  ) |>
  pivot_wider(
    names_from = Year,
    values_from = V_H
  )

# put data back in a more useable format
regs_tidy <- regs_pivot |>
  pivot_longer(
    cols = -Label,
    names_to = "Year",
    values_to = "Value"
  ) |>
  mutate(Year = as.numeric(Year)) # Ensure Year is numeric for plotting


# Filter for the counties of interest and reshape the data for plotting
regs_tidy_filtered <- regs_tidy |>
  filter(Label %in% c("BRONX", "KINGS", "NEW YORK", "QUEENS"))


# Get registration peak and valley for each borough
regs_high_low <- regs_tidy_filtered |>
  group_by(Label) |>
  summarize(
    High_Year = Year[which.max(Value)],
    High_Value = max(Value),
    Low_Year = Year[which.min(Value)],
    Low_Value = min(Value)
  )

# Merge high and low points back into the tidy dataset for annotations
regs_tidy_filtered <- regs_tidy_filtered |>
  left_join(regs_high_low, by = "Label")

# Vehicle Registrations by County
ggplot(regs_tidy_filtered, aes(x = Year, y = Value, fill = Label)) +
  geom_bar(stat = "identity") + # stat="identity" tells ggplot to use the actual data
  labs(
    title = "Vehicle Registrations by County",
    x = "Year",
    y = "Registrations",
    fill = "County"
  ) +
  theme_minimal() +
  scale_y_continuous(labels = comma) +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1),
    plot.background = element_rect(fill = "gray95"),
    panel.background = element_rect(fill = "gray95", color = NA)
  )
```


From the same data as the home occupancies, we see from that vehicle ownership hasn't really risen too much.

Let's see if we can find some other way to visualize that.

```{r reg-over-time-with-corr-plot_[7], echo=TRUE, message=FALSE, warning=FALSE}
#| code-fold: TRUE
# making a quick linear model to try and find the
# line of best fit for registrations
lm_model <- lm(Value ~ Year, data = regs_tidy_filtered)
slope <- coef(lm_model)["Year"]
intercept <- coef(lm_model)["(Intercept)"]

# Create a formatted trendline equation
trend_eq <- paste0("TREND: y = ", round(slope, 2), "x + ", round(intercept, 2))

# Calculate Pearson correlation
correlation <- cor(regs_tidy_filtered$Year, regs_tidy_filtered$Value)
cor_label <- paste0("TREND: ", round(correlation, 2))

# Plot with correlation in the legend
ggplot(regs_tidy_filtered, aes(x = Year, y = Value, color = Label, group = Label)) +
  geom_line(size = 1) +
  geom_point() +

  # Highlight high and low points
  geom_point(aes(x = High_Year, y = High_Value), color = "#00BFC4", size = 3, shape = 17) +
  geom_text(aes(x = High_Year, y = High_Value, label = paste0("High: ", comma(High_Value))),
    vjust = -1, color = "#00BFC4", size = 3
  ) +
  geom_point(aes(x = Low_Year, y = Low_Value), color = "#F8766D", size = 3, shape = 17) +
  geom_text(aes(x = Low_Year, y = Low_Value, label = paste0("Low: ", comma(Low_Value))),
    vjust = 1.5, color = "#F8766D", size = 3
  ) +

  # Add a linear regression trendline (overall trend)
  geom_smooth(
    method = "lm", se = FALSE, aes(group = 1, color = cor_label),
    linetype = "dashed", size = 1
  ) +

  # Add the correlation call-out near the trendline
  annotate("text",
    x = 2020.25,
    y = predict(lm_model, newdata = data.frame(Year = 2021)) + 10000,
    label = paste0("r = ", round(correlation, 2)),
    color = "black",
    size = 4
  ) +
  labs(
    x = "Year",
    y = "Registered Vehicles in NYC",
    color = "County/State"
  ) +
  scale_y_continuous(labels = comma) +
  scale_x_continuous(breaks = seq(2017, 2023, by = 1)) +
  coord_cartesian(clip = "off") +
  theme_minimal() +
  theme(
    plot.background = element_rect(fill = "gray95"),
    panel.background = element_rect(fill = "gray95", color = NA),
    axis.text.x = element_text(angle = 45, hjust = 1),
    plot.margin = margin(10, 10, 10, 10)
  ) +
  ggtitle("Vehicle Registrations Over Time") +
  theme(plot.title = element_text(hjust = 0.5))
```

So, vehicle ownership hasn't grown a lot (though it has generally very slightly gone up), but this doesn't really explain what might be going on.

## Bicycles

So let's look at bike ridership, [*NYC Open Data*](https://data.cityofnewyork.us/Transportation/Bicycle-Counts/uczf-rk3c/about_data) provides a source of `Bicycle Counts` at various locations around the city. The data I'm viewing is from November, so results might differ.

```{r bike-plot_[8], echo=TRUE, message=FALSE, warning=FALSE}
#| code-fold: TRUE
bike_data <- read_csv("data/ridership/Bicycle_Counts_20241106.csv")

# format is a bit busted so this fixes it
bike_data$date <- as.POSIXct(bike_data$date, format = "%m/%d/%Y %I:%M:%S %p")

bike_data_filtered <- bike_data |>
  filter(status %in% c(4, 8, 16)) |>
  mutate(year = year(date)) |>
  filter(year >= 2017 & year <= 2023) 

yearly_counts <- bike_data_filtered |>
  group_by(year) |>
  summarize(total_counts = sum(counts, na.rm = TRUE))


ggplot(yearly_counts, aes(x = year, y = total_counts)) +
  geom_line(color = "blue", size = 1) +
  geom_point(color = "darkblue", size = 3) +
  scale_y_continuous(labels = scales::comma) +
  labs(
    title = "NYC Bike Counts (Status: Modified, Validated, Certified)\n",
    subtitle = "Yearly Bike Volume from 2017 to 2023",
    x = "Year",
    y = "Total Bike Volume"
  ) +
  theme_minimal() +
  theme(
    plot.background = element_rect(fill = "gray95"),
    panel.background = element_rect(fill = "gray95", color = NA)
  )

```

This doesn't seem to really explain why ridership is down either.

# What Else?

There are several theories for what might be causing the slow return-to-form.

The newspaper *The City*[^4] believes that with remote work up and tourism down, for example, that the Subway system will continue to be underutilized.

<div class="center-image">
  ![Work From Home Rates in NYC per *The City*](images/the_city_wfh_graph.png)
</div>

<div class="center-image">
  ![*The City*'s tourism rates based on hotel occupancies in NYC](images/the_city_tourism_graph.png)
</div>

# Conclusion

The data I reviewed seemed to counter at least one reason why ridership has not returned to pre-pandemic levels. People are not leaving the City, they seem to not be biking as much, and they are not driving much more than they previously were.

I really like the idea of exploring how remote work has changed the transportation landscape, which is one of the several other interesting areas my group has researched.

This fact that the Subway is struggling to get back to the highs of 2017 also indicates ridership was possibly plateauing or even significantly declining from 2018 - February 2020, before COVID hit.

It's a dirty mess that's always broken down and delayed, but dammit, its our broken down and delayed mess.


### Citations

[^1]: [Metro Mindset Group Project](https://sethkauf.github.io//STA9750-PROJECT-2024-FALL/)

[^2]: [Office of the New York State Comptroller Report on the MTA, October 2024](https://www.osc.ny.gov/files/reports/osdc/pdf/report-17-2025.pdf)

[^3]: [ABC 7 NY News Report on Used Car Market, December 2020](https://abc7ny.com/used-cars-consumer-reports-pandemic-auto-sales-covid/8949214/)

[^4]: [The City's analysis of the MTA and its road to recovery](https://projects.thecity.nyc/hows-new-york-city-doing/)